#mybatis-plus
mybatis-plus.type-aliases-package=com.jeiker.demo.entity
# 数据源 db0,db1,db2
sharding.jdbc.datasource.names=mydb0,mydb1
# 第一个数据库
sharding.jdbc.datasource.mydb0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.mydb0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.mydb0.jdbc-url=jdbc:mysql://localhost:3306/mydb0?useSSL=false&useUnicode=true&characterEncoding=UTF-8
sharding.jdbc.datasource.mydb0.username=root
sharding.jdbc.datasource.mydb0.password=123456
# 第二个数据库
sharding.jdbc.datasource.mydb1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.mydb1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.mydb1.jdbc-url=jdbc:mysql://localhost:3306/mydb1?useSSL=false&useUnicode=true&characterEncoding=UTF-8
sharding.jdbc.datasource.mydb1.username=root
sharding.jdbc.datasource.mydb1.password=123456
# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=mydb$->{id % 2}
# 分表策略 其中book为逻辑表 分表主要取决于id行
sharding.jdbc.config.sharding.tables.book.actual-data-nodes=mydb$->{0..1}.book_$->{0..1}
sharding.jdbc.config.sharding.tables.book.table-strategy.inline.sharding-column=count
# 分片算法表达式
sharding.jdbc.config.sharding.tables.book.table-strategy.inline.algorithm-expression=book_$->{count % 2}
# 主键 UUID 18位数 如果是分布式还要进行一个设置 防止主键重复
#sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id
# 打印执行的数据库以及语句
sharding.jdbc.config.props..sql.show=true
spring.main.allow-bean-definition-overriding=true